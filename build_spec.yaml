version: 0.1
component: build
timeoutInSeconds: 900
shell: bash
steps:
  - type: Command
    name: Verificar versión de Node.js
    command: |
      echo "Verificando versión de Node.js instalada..."
      node -v
      npm -v
      
  - type: Command
    name: Reemplazar vite.config.ts
    command: |
      echo "Creando un archivo vite.config.ts sin lovable-tagger..."
      
      # Hacer backup del original
      if [ -f "vite.config.ts" ]; then
        cp vite.config.ts vite.config.ts.original
      fi
      
      # Crear configuración completa sin lovable-tagger
      cat > vite.config.ts << 'EOF'
      import { defineConfig } from "vite";
      import react from "@vitejs/plugin-react-swc";
      import path from "path";
      
      // https://vitejs.dev/config/
      export default defineConfig(({ mode }) => ({
        server: {
          host: "::",
          port: 8080,
          proxy: {
            "/auth": {
              target: "https://129.153.38.200.nip.io",
              changeOrigin: true,
              secure: false,
            },
          },
        },
        plugins: [
          react(),
          // componentTagger se ha eliminado para compatibilidad con entornos de build
        ],
        resolve: {
          alias: {
            "@": path.resolve(__dirname, "./src"),
          },
        },
        optimizeDeps: {
          exclude: ['lucide-react'],
        },
        build: {
          outDir: 'dist'
        }
      }));
      EOF
      
      echo "Nueva configuración de Vite creada correctamente"
      
      # Verificación de que el archivo se creó correctamente
      ls -l vite.config.ts
      cat vite.config.ts | grep -v lovable-tagger
      
  - type: Command
    name: Instalar dependencias
    command: |
      echo "Instalando dependencias sin paquetes problemáticos..."
      npm install --ignore-scripts --no-audit --legacy-peer-deps
      npm uninstall lovable-tagger --force
      npm install --force --legacy-peer-deps --no-audit
    
  - type: Command
    name: Compilar aplicación
    command: |
      echo "Compilando aplicación React..."
      npm run build
    onFailure:
      - type: Command
        command: |
          echo "La compilación falló. Creando directorio dist con página básica."
          mkdir -p dist
          echo "<html><body><h1>Build failed</h1></body></html>" > dist/index.html
          
  - type: Command
    name: Verificar compilación
    command: |
      # Asegurar que existe el directorio dist
      if [ ! -d "dist" ]; then
        mkdir -p dist
        echo "<html><body><h1>Build directory created</h1></body></html>" > dist/index.html
      fi
      # Verificar contenido
      ls -la dist
        
outputArtifacts:
  - name: ReactBuildOutput
    type: BINARY
    location: dist