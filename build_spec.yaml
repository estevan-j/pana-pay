version: 0.1
component: build
timeoutInSeconds: 900
shell: bash
steps:
  - type: Command
    name: Instalar Node.js 20
    command: |
      echo "Instalando Node.js 20..."
      # Método para Oracle Linux usando curl y binarios precompilados
      curl -sL https://nodejs.org/dist/v20.12.2/node-v20.12.2-linux-x64.tar.gz -o nodejs.tar.gz
      mkdir -p /usr/local/nodejs
      tar -zxf nodejs.tar.gz -C /usr/local/nodejs --strip-components=1
      export PATH=/usr/local/nodejs/bin:$PATH
      # Verificar instalación
      node -v
      npm -v
      
  - type: Command
    name: Instalar dependencias
    command: |
      # Usar la nueva instalación de Node
      export PATH=/usr/local/nodejs/bin:$PATH
      echo "Instalando dependencias..."
      npm ci
    
  - type: Command
    name: Compilar aplicación
    command: |
      # Usar la nueva instalación de Node
      export PATH=/usr/local/nodejs/bin:$PATH
      echo "Compilando aplicación React..."
      npm run build
    onFailure:
      - type: Command
        command: |
          echo "La compilación falló. Creando directorio dist con página básica."
          mkdir -p dist
          echo "<html><body><h1>Build failed</h1></body></html>" > dist/index.html
          
  - type: Command
    name: Verificar compilación
    command: |
      # Asegurar que existe el directorio dist
      if [ ! -d "dist" ]; then
        mkdir -p dist
        echo "<html><body><h1>Build directory created</h1></body></html>" > dist/index.html
      fi
      # Verificar contenido
      ls -la dist
        
outputArtifacts:
  - name: ReactBuildOutput
    type: BINARY
    location: ./dist
